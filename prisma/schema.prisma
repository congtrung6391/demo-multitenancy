// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  username      String?   @unique
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  roles         UserRole[]
  archived      Boolean   @default(false)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")
  accessStatus  AccessStatus  @default(PENDING) @map("access_status")

  @@map("users")
}

model Role {
  id            Int       @id @default(autoincrement())
  roleName      ERole     @default(USER)  @map("role_name")
  users         UserRole[]
  @@map("roles")
}

model UserRole {
  @@id([userId, roleId])
  roleId        Int       @map("role_id")
  userId        String    @map("user_id")
  user          User      @relation(fields: [userId], references: [id])
  role          Role      @relation(fields: [roleId], references: [id])

  @@map("users_roles")
}

enum ERole {
  ADMIN
  USER
}

enum AccessStatus {
  PENDING
  APPROVED
}
